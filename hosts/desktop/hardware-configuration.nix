# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f1116515-e7d0-41e1-af96-e8bed3b90503";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-3e66e646-5213-46ca-9cf9-ea61d65159a9".device = "/dev/disk/by-uuid/3e66e646-5213-46ca-9cf9-ea61d65159a9";
  boot.initrd.luks.devices."luks-7428bc36-adad-4d69-a035-2c2d6ddbd7fc".device = "/dev/disk/by-uuid/7428bc36-adad-4d69-a035-2c2d6ddbd7fc";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/471E-9688";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/mnt/Games" =
  {
    device = "/dev/disk/by-uuid/8774a2b7-1b02-41bf-9cc0-d2cf79dc29a3";
    fsType = "ext4";
    options = [ "users" "exec" "x-gvfs-show" ];
  };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/cffe90d9-31e4-4c75-a47e-dc509be1009c"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
